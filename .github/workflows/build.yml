name: Build Magisk Module Zip

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags, e.g., v1.0.2
  workflow_dispatch:
    inputs:
      version:
        description: 'Versioni i ri i modulës'
        required: false
        default: '1.0.0'
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository me historikun e plotë
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Sigurohuni që të keni akses në historikun e plotë të git për të push-uar ndryshimet

      # 2. Vendosja e variablit të versionit
      - name: Set version environment variable
        id: set_version
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            VERSION=${GITHUB_REF#refs/tags/}  # Heq prefiksin refs/tags/ nga tag-u
            VERSION=${VERSION#v}  # Heq 'v' nga fillimi
          else
            VERSION=${{ github.event.inputs.version }}
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      # 3. Shfaq versionin për verifikim
      - name: Display Version
        run: echo "Building version ${{ env.VERSION }}"

      # 4. Përditësoj versionin dhe zipUrl në update.json
      - name: Update version and zipUrl in update.json
        run: |
          sed -i "s/\"version\":.*/\"version\": \"${{ env.VERSION }}\",/" update.json
          sed -i "s#\"zipUrl\":.*#\"zipUrl\": \"https://github.com/${{ github.repository }}/releases/download/v${{ env.VERSION }}/Odex_app_${{ env.VERSION }}.zip\",#" update.json
          echo "Updated update.json with version ${{ env.VERSION }} and zipUrl"

      # 5. Përditësoj versionin në module.prop
      - name: Update version in module.prop
        run: |
          sed -i "s/version=.*/version=${{ env.VERSION }}/" module.prop
          echo "Updated module.prop with version ${{ env.VERSION }}"

      # 6. Krijo skedarin ZIP me emër versioni
      - name: Create zip archive
        run: |
          ZIP_NAME="Odex_app_${{ env.VERSION }}.zip"
          echo "Creating ZIP: $ZIP_NAME"
          zip -r $ZIP_NAME * -x '.git/*' '.github/*'
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV

      # 7. Commit dhe push ndryshimet në update.json dhe module.prop
      - name: Commit dhe push ndryshimet
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Përditësoj update.json dhe module.prop me versionin ${{ env.VERSION }}"
          branch: cocka11  # Sigurohu që kjo është dega e duhur
          file_pattern: |
            update.json
            module.prop
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 8. Krijo Release dhe Ngarko ZIP-in
      - name: Create Release and Upload Zip
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          files: |
            Odex_app_${{ env.VERSION }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 9. Kontrollo Statusin e Ngarkimit
      - name: Check Upload Status
        run: |
          echo "Verifikoni nëse ZIP u ngarkua me sukses në release."
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }}/releases/tags/v${{ env.VERSION }}
