name: Build Magisk Module Zip

on:
  push:
    branches:
      - main
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Versioni i ri i modulës'
        required: false
        default: '1.0.0'
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set version environment variable
        id: set_version
        run: |
          echo "VERSION=${{ github.event.inputs.version || 'latest' }}" >> $GITHUB_ENV

      - name: Create zip archive
        run: |
          ZIP_NAME="Odex_app_${{ env.VERSION }}.zip"  # Përdorni versionin në emrin e skedarit
          zip -r $ZIP_NAME ./* -x '.git/*' '.github/*'
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV  # Ruani emrin e skedarit në variablin e ambientit

      - name: Update update.json
        run: |
          echo "Updating update.json..."
          echo '{
            "version": "${{ env.VERSION }}",
            "name": "Odex_app",
            "description": "Moduli për azhurnimin automatik të Magisk",
            "url": "https://github.com/cocka11/Odex_app/releases/latest/download/Odex_app_${{ env.VERSION }}.zip"
          }' > update.json

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Odex_app
          path: Odex_app_${{ env.VERSION }}.zip  # Përdorni emrin e ri të skedarit

      - name: Create Release and Upload Zip
        if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'push'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION || github.ref }}
          name: Release ${{ env.VERSION || github.ref }}
          files: |
            Odex_app_${{ env.VERSION }}.zip  # Përdorni emrin e ri të skedarit
            update.json  # Ngarko edhe skedarin JSON
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Upload Status
        run: |
          echo "Check if the zip was uploaded successfully."
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }}/releases
