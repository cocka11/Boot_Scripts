name: Build Magisk Module Zip

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags, e.g., v1.0.2
  workflow_dispatch:
    inputs:
      version:
        description: 'Versioni i ri i modulës'
        required: false
        default: '1.0.0'
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Sigurohuni që të keni akses në historikun e plotë të git për të push-uar ndryshimet

      - name: Set version environment variable
        id: set_version
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            VERSION=${{ github.event.inputs.version || github.ref }}
            VERSION=${VERSION#refs/tags/}  # Heq prefiksin refs/tags/ nga tag-u
          else
            VERSION=${{ github.event.inputs.version }}
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Display Version
        run: echo "Building version ${{ env.VERSION }}"

      - name: Update update.json
        run: |
          echo "Updating update.json..."
          cat <<EOF > update.json
          {
            "version": "${{ env.VERSION }}",
            "name": "Odex_app",
            "description": "Moduli për azhurnimin automatik të Magisk",
            "zipUrl": "https://github.com/cocka11/Odex_app/releases/download/v${{ env.VERSION }}/Odex_app_${{ env.VERSION }}.zip"
          }
          EOF

      - name: Commit and Push update.json
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add update.json
          git commit -m "Update update.json to version v${{ env.VERSION }}"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create zip archive
        run: |
          ZIP_NAME="Odex_app_${{ env.VERSION }}.zip"
          echo "Creating ZIP: $ZIP_NAME"
          zip -r $ZIP_NAME ./* -x '.git/*' '.github/*'
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV

      - name: List Files After Zip Creation
        run: |
          echo "Listing files after creating the zip and update.json:"
          ls -la

      - name: Create Release and Upload Zip
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          files: |
            Odex_app_${{ env.VERSION }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Upload Status
        run: |
          echo "Verifikoni nëse ZIP u ngarkua me sukses në release."
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }}/releases/tags/v${{ env.VERSION }}
